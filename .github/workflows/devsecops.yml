name: DevSecOps Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Build et Tests
  build:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt

    - name: Test application
      run: |
        cd app
        python -c "import app; print('App imported successfully')"

  # Job 2: Scan des secrets
  secret-scan:
    name: 🔍 Secret Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job 3: Analyse statique (SAST)
  sast:
    name: 🔒 Static Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: p/python
        generateSarif: "1"

    - name: Install Bandit
      run: |
        pip install bandit
        bandit -r app/ -f json -o bandit-report.json || true

    - name: Upload SAST results
      uses: actions/upload-artifact@v3
      with:
        name: sast-results
        path: bandit-report.json

  # Job 4: Analyse des dépendances
  dependency-scan:
    name: 📦 Dependency Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Safety
      run: |
        pip install safety
        safety check -r app/requirements.txt --json --output safety-report.json || true

    - name: Upload dependency results
      uses: actions/upload-artifact@v3
      with:
        name: dependency-results
        path: safety-report.json

  # Job 5: Scan Docker
  docker-scan:
    name: 🐳 Docker Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -f docker/Dockerfile -t devsecops-app:latest .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'devsecops-app:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: actions/upload-artifact@v3
      with:
        name: trivy-results
        path: trivy-results.sarif
